[{"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsChart.js":"1","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\Main.js":"2","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ServiceBasicInfo.js":"3","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ManageServiceTile.js":"4","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js":"5","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js":"6","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js":"7","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js":"8","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\MachineTile\\MachineTile.js":"9","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\Tables\\DashboardTable.js":"10","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\Chart.js":"11","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\MachineBar.js":"12","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceMobile.js":"13","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Header.js":"14","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\ResponseParser.js":"15","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NewWebhookItem.js":"16","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\reportWebVitals.js":"17","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\UserPreferencesManager.js":"18","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\MetricTile.js":"19","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\index.js":"20","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\signalr-context.js":"21","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\Tables\\Logs.js":"22","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\WebhookItem.js":"23","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\ApprovalModal.js":"24","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceHeader.js":"25","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\Label.js":"26","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\App.js":"27","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceHeaderMobile.js":"28","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\Authentication\\InMemoryJwt.js":"29","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\LoginModal.js":"30","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsSettings.js":"31","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\MachineTile\\MachineTileMobile.js":"32","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\Helpers.js":"33"},{"size":1514,"mtime":1615571081412,"results":"34","hashOfConfig":"35"},{"size":6515,"mtime":1616593148293,"results":"36","hashOfConfig":"35"},{"size":784,"mtime":1614611252026,"results":"37","hashOfConfig":"35"},{"size":4466,"mtime":1615809169024,"results":"38","hashOfConfig":"35"},{"size":4930,"mtime":1616679924374,"results":"39","hashOfConfig":"35"},{"size":4176,"mtime":1614614461556,"results":"40","hashOfConfig":"35"},{"size":3558,"mtime":1616767408856,"results":"41","hashOfConfig":"35"},{"size":7510,"mtime":1616768401669,"results":"42","hashOfConfig":"35"},{"size":2002,"mtime":1614766812452,"results":"43","hashOfConfig":"35"},{"size":2055,"mtime":1614766303219,"results":"44","hashOfConfig":"35"},{"size":2204,"mtime":1614766131179,"results":"45","hashOfConfig":"35"},{"size":982,"mtime":1614766852756,"results":"46","hashOfConfig":"35"},{"size":3822,"mtime":1614768330859,"results":"47","hashOfConfig":"35"},{"size":1074,"mtime":1616770069143,"results":"48","hashOfConfig":"35"},{"size":610,"mtime":1614774434656,"results":"49","hashOfConfig":"35"},{"size":2661,"mtime":1614599989151,"results":"50","hashOfConfig":"35"},{"size":375,"mtime":1607351855515,"results":"51","hashOfConfig":"35"},{"size":4184,"mtime":1615991437696,"results":"52","hashOfConfig":"35"},{"size":635,"mtime":1614765728504,"results":"53","hashOfConfig":"35"},{"size":684,"mtime":1607351855515,"results":"54","hashOfConfig":"35"},{"size":1098,"mtime":1613471733608,"results":"55","hashOfConfig":"35"},{"size":2083,"mtime":1616768320279,"results":"56","hashOfConfig":"35"},{"size":2044,"mtime":1614604633821,"results":"57","hashOfConfig":"35"},{"size":704,"mtime":1614606463998,"results":"58","hashOfConfig":"35"},{"size":1553,"mtime":1615822330762,"results":"59","hashOfConfig":"35"},{"size":279,"mtime":1614765533984,"results":"60","hashOfConfig":"35"},{"size":941,"mtime":1616770744138,"results":"61","hashOfConfig":"35"},{"size":1038,"mtime":1615989917699,"results":"62","hashOfConfig":"35"},{"size":1686,"mtime":1616762145835,"results":"63","hashOfConfig":"35"},{"size":1810,"mtime":1616683090209,"results":"64","hashOfConfig":"35"},{"size":2436,"mtime":1616593903505,"results":"65","hashOfConfig":"35"},{"size":988,"mtime":1614766059796,"results":"66","hashOfConfig":"35"},{"size":1140,"mtime":1616765956915,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"oxmjk5",{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsChart.js",[],["144","145"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\Main.js",["146","147","148","149","150"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { SignalRContext } from \"../../utils/signalr-context\";\r\nimport { useWindowSize } from \"../../Hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport DatePicker from 'react-datepicker';\r\nimport MachineBar from \"../Common/MetricsComponents/MachineBar\"\r\nimport NotificationCharts from \"./components/NotificationsChart\";\r\nimport DashboardTable from \"../Common/Tables/DashboardTable\";\r\nimport ServiceBasicInfo from \"./components/ServiceBasicInfo\"\r\nimport NotificationSettings from \"./components/NotificationsSettings\"\r\nimport ManageServiceTile from './components/ManageServiceTile'\r\nimport './components/ServiceDetails.css';\r\nimport { API } from \"../../utils/API\";\r\nimport Helpers from \"../../utils/Helpers\"\r\nimport ResponseParser from '../../utils/ResponseParser'\r\nimport InMemoryJwt from '../../utils/Authentication/InMemoryJwt'\r\nimport LoginModal from '../Common/LoginModal'\r\nimport Modal from \"react-modal\";\r\n\r\nconst ServiceDetails = ()=>{\r\n\r\n  const connection = useContext(SignalRContext);\r\n  const { machineName, serviceName } = useParams();\r\n  const [machineState, setMachineState] = useState({});\r\n  const [machineAddress, setMachineAddress] = useState(\"\");\r\n  const [serviceStatus, setServiceStatus] = useState({});\r\n  const [serviceEvents, setServiceEvents] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [notifierTypes, setNotifierTypes] = useState([]);\r\n  const [notifiers, setNotifiers] = useState([]);\r\n  const windowSize = useWindowSize();\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n\r\n  useEffect(()=>{\r\n    setLoginStatus(InMemoryJwt.getToken()!=null);\r\n  });\r\n\r\n    useEffect(() => {\r\n      const init = async () => {\r\n          await Promise.all([\r\n            API.fetchServiceEvents(machineName, serviceName).then((response) => {\r\n              const cd =[];\r\n              const td = [];\r\n              response?.data.map((e, i)=>{\r\n                let val = 0;\r\n                e.status.toLowerCase(e.status) === 'running' ? val = 1 : val = 0.3\r\n                cd.push({time:Date.parse(e.createdAt), value:val});\r\n                td.push({agent:e.agent,time:Helpers.formatDate(e.createdAt), status:e.status});\r\n              })\r\n              setChartData(cd);\r\n              setServiceEvents(td);\r\n            }),\r\n            API.fetchMachineList().then((response) => {\r\n              let ipAddress = response?.data.filter(\r\n                (ms) => ms.name == machineName\r\n              )[0];\r\n              setMachineAddress(ipAddress?.address);\r\n            }),\r\n            API.fetchServicesList(machineName).then((response) => {\r\n              let service = response.data.filter(x=>{ return x.name === serviceName})[0];\r\n              console.log(service);\r\n              let newServiceState = {\r\n                machineName:machineName,\r\n                serviceName:serviceName,\r\n                logonAs:service.logOnAs,\r\n                description:service.description,\r\n                status:service.status\r\n              };\r\n              setServiceStatus(newServiceState);\r\n              let currentStatus = 0;\r\n              newServiceState.status.toLowerCase()==='running' ? currentStatus = 1: currentStatus = 0.3\r\n              let newPoint = {time:Date.now(), value: currentStatus}\r\n              setChartData(prevState=>[...prevState, newPoint]);\r\n            }),\r\n            API.getNotifierTypes().then((response) => {\r\n              setNotifierTypes(response?.data);\r\n            }),\r\n            API.fetchWebhooks(machineName, serviceName).then((response) => {\r\n              setNotifiers(response?.data.notifiers);\r\n            })\r\n          ]);\r\n        };\r\n      init();\r\n    }, []);//[machineName, serviceName]\r\n\r\n   \r\n    useEffect(() => {\r\n      const init = async () => {\r\n        if (connection !== null) {\r\n          connection.on(\"MachineHealthReceived\", (response) => {\r\n            if (response?.agent === machineName) {\r\n              let updated = ResponseParser.MachineHealtStatusReceived(response);\r\n              setMachineState(updated);\r\n            }\r\n          });\r\n          connection.on(\"ServiceStatusChanged\", (response) => {\r\n            if (response?.agent === machineName) {\r\n              let update = Object.assign({}, serviceStatus);\r\n              update.status = response.status;\r\n              setServiceStatus(update);\r\n              let val = 0;\r\n              response.status.toLowerCase(response.status) === 'running' ? val = 1 : val = 0.3\r\n              let newPoint = {time:Date.now(), value: val}\r\n              setChartData(prevState=>[...prevState, newPoint]);\r\n            }\r\n          });\r\n        }\r\n      };\r\n  \r\n      init();\r\n      return () => {\r\n        connection?.off(\"MachineHealthReceived\");\r\n        connection?.off(\"ServiceStatusChanged\");\r\n      };\r\n    }, [connection, machineName]);\r\n\r\n  Modal.defaultStyles.overlay.backgroundColor = \"#2B3139\";\r\n  const showModalHandler = () => {\r\n    let isShowing = showModal;\r\n    setShowModal(!isShowing);\r\n  };\r\n    if (!loginStatus) {\r\n      return <LoginModal decline={showModalHandler}></LoginModal>;\r\n    }\r\n  \r\nreturn (\r\n    <div>\r\n      {\r\n        windowSize<=768 ? null : <MachineBar\r\n        machine={machineName}\r\n        address={machineAddress}\r\n        cpu={machineState.cpu}\r\n        ram={machineState.ram}\r\n        disc={machineState.disc}\r\n        services={machineState.services}>\r\n      </MachineBar> \r\n      }\r\n       \r\n<div className=\"label-settings-container\">\r\n            <div className=\"label-chart-container\">\r\n                <ServiceBasicInfo serviceInfo={serviceStatus}></ServiceBasicInfo>\r\n                <ManageServiceTile\r\n                agent={machineName}\r\n                serviceName={serviceName}\r\n                status={serviceStatus.status}>\r\n                </ManageServiceTile>\r\n                <NotificationCharts data={chartData}></NotificationCharts>\r\n            </div>\r\n              <NotificationSettings\r\n              types={notifierTypes}\r\n              notifiers={notifiers}\r\n              agent={machineName}\r\n              service={serviceName}\r\n              >\r\n              </NotificationSettings>\r\n</div> \r\n          \r\n          <DashboardTable tableData={serviceEvents} ></DashboardTable>\r\n          <DatePicker selected={new Date(\"2021-02-19\")} onChange={date => console.log(date)} />\r\n</div>    \r\n  )\r\n}\r\n\r\nexport default ServiceDetails;","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ServiceBasicInfo.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ManageServiceTile.js",["151","152"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js",["153"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js",["154"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js",["155","156","157"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\MachineTile\\MachineTile.js",["158","159"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\Tables\\DashboardTable.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\Chart.js",[],["160","161"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\MachineBar.js",[],["162","163"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceMobile.js",["164"],"import { API } from '../../utils/API'\r\nimport React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport ApprovalModal from '../Common/ApprovalModal'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ServiceMobile = ({ agent, service, index }) => {\r\n    const [showRestartModal, setShowRestartModal] = useState(false);\r\n    const [showStartModal, setShowStartModal] = useState(false);\r\n    const [showStopModal, setShowStopModal] = useState(false);\r\n    Modal.defaultStyles.overlay.backgroundColor = 'transparent';\r\n\r\n    const hideModal = (name)=>{\r\n        switch(name) {\r\n           case 'restart' : setShowRestartModal(false);\r\n           break;\r\n           case 'start': setShowStartModal(false);\r\n           break;\r\n           case'stop':setShowStopModal(false);\r\n           break;\r\n        }\r\n    }\r\n\r\n    const restartServiceHandler = ()=>{\r\n        API.restartService(agent,service.name);\r\n        setShowRestartModal(false);\r\n    }\r\n\r\n    const startServiceHandler = ()=>{\r\n        API.startService(agent,service.name);\r\n        setShowStartModal(false);\r\n    }\r\n\r\n    const stopServiceHandler = ()=>{\r\n        API.stopService(agent,service.name);\r\n        setShowStopModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div key={service.name + index} className=\"service-mobile\">\r\n                <div className={`service-status-mobile ${service.status}`}>\r\n                </div>\r\n                <div className=\"buttons-wrapper-mobile\">\r\n                    <p className=\"service-name-mobile\">{service.name}</p>\r\n                    <div>\r\n                        {service.status.toLowerCase() === \"running\" ? (\r\n                            <button className=\"button\" onClick={()=>setShowStopModal(true)} >Stop</button>\r\n                        ) : (\r\n                                <button className=\"button\" onClick={()=>setShowStartModal(true)} >Start</button>\r\n                            )}\r\n\r\n                        <button className=\"button\" onClick={()=>setShowRestartModal(true)}>Restart</button>\r\n                        <Link to={`/${agent}/${service.name}`}>\r\n                            <button className=\"button special\">More</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                isOpen={showRestartModal}\r\n                ariaHideApp={false}\r\n                className=\"agent-modal\"\r\n            >\r\n                <ApprovalModal \r\n                service={service.name} \r\n                decline={()=>{hideModal('restart')}}\r\n                message=\"Are you sure you want to restart service?\"\r\n                entity={service.name}\r\n                action={restartServiceHandler}>\r\n                </ApprovalModal>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={showStartModal}\r\n                ariaHideApp={false}\r\n                className=\"agent-modal\"\r\n            >\r\n                <ApprovalModal \r\n                service={service.name} \r\n                decline={()=>{hideModal('start')}}\r\n                message=\"Are you sure you want to start service?\"\r\n                entity={service.name}\r\n                action={startServiceHandler}>\r\n                </ApprovalModal>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={showStopModal}\r\n                ariaHideApp={false}\r\n                className=\"agent-modal\"\r\n            >\r\n                <ApprovalModal \r\n                service={service.name} \r\n                decline={()=>{hideModal('stop')}}\r\n                message=\"Are you sure you want to stop service?\"\r\n                entity={service.name}\r\n                action={stopServiceHandler}>\r\n                </ApprovalModal>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServiceMobile;",["165","166"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Header.js",["167","168","169","170"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\ResponseParser.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NewWebhookItem.js",["171"],"import React, { useState, useEffect} from \"react\";\r\nimport Helpers from '../../../utils/Helpers';\r\nimport { API } from \"../../../utils/API\";\r\n    \r\n    const NewWebhookItem = (props)=>{\r\n        const [receiver, setReceiver] = useState(\"\");\r\n        const [webhook, setWebhook] = useState(-1);\r\n        const [displayCreateButton,setDisplayCreateButton ] = useState(true);\r\n\r\n        const changeTypeHandler = (e)=>{\r\n            let w = e.currentTarget.value;\r\n            setWebhook(w);\r\n        }\r\n\r\n        useEffect(() => {\r\n            console.log(webhook);\r\n         }, [webhook]);\r\n\r\n        const createNotifierHandler = ()=>{\r\n            API.createNotifier(props.agent, props.service, receiver, parseInt(webhook))\r\n            .then(response=>{\r\n                if(response.status >=200 &response.status<300){\r\n                    setDisplayCreateButton(false);\r\n                }\r\n            }).catch(e=>{console.log(e)});\r\n        }\r\n\r\n        const deleteNotifierCreatedHandler = ()=>{\r\n            API.deleteNotifier(props.agent, props.service, receiver)\r\n            .then(response=>{\r\n                if(response.status >=200 & response.status<300){\r\n                    props.deleteClick(props.index);\r\n                }\r\n            });\r\n            \r\n        }\r\n\r\n        const createButton = <p \r\n        className=\"gadget-btn webhook-setting-btn setting-accept-btn\"\r\n        onClick={createNotifierHandler}\r\n        >&#10003;</p>\r\n\r\n        const removeNewItem = <p \r\n        className=\"gadget-btn webhook-setting-btn setting-delete-btn\"\r\n        onClick={deleteNotifierCreatedHandler}\r\n        >x</p>\r\n\r\n        const deletedCreatedItem = <p \r\n        className=\"gadget-btn webhook-setting-btn setting-delete-btn\"\r\n        onClick={()=>{props.deleteClick(props.index)}}\r\n        >x</p>\r\n\r\n    return (\r\n        <div className=\"webhook-item\">\r\n            <select\r\n            className=\"webhook-type\"\r\n            onChange={changeTypeHandler}\r\n            value={webhook}>\r\n                {\r\n                    props.types.map((t,i)=>{\r\n                       return (<option key={i} value={t[\"key\"]}>{Helpers.upperFirst(t[\"name\"])}</option>)\r\n                    })\r\n                }\r\n            </select>\r\n                <input \r\n                className=\"sink-input\"\r\n                placeholder=\"receiver\"\r\n                type=\"text\" \r\n                value={receiver}\r\n                onChange={(e)=>{setReceiver(e.target.value)}}\r\n                >\r\n                </input>\r\n                {displayCreateButton? createButton:null}\r\n                {removeNewItem}\r\n        </div>\r\n    )\r\n};\r\nexport default NewWebhookItem;","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\reportWebVitals.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\UserPreferencesManager.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\MetricTile.js",["172"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\index.js",[],["173","174"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\signalr-context.js",["175","176"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { HubConnectionBuilder, LogLevel, HubConnectionState } from \"@microsoft/signalr\";\r\nimport {SIGNALR_URL} from \"../config\";\r\n\r\n\r\nconst SignalRContext = createContext(null)\r\n\r\nexport { SignalRContext }\r\n\r\nexport default ({ children }) => {\r\n    const [hubConnection, setHubConnection] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        const connection = new HubConnectionBuilder()\r\n            .withUrl(SIGNALR_URL)\r\n            .configureLogging(LogLevel.Critical)\r\n            .withAutomaticReconnect()\r\n            .build()\r\n\r\n        async function start() {\r\n            try {\r\n                await connection.start();\r\n                setHubConnection(connection)\r\n            } catch (err) {\r\n                console.log(err);\r\n                setTimeout(() => start(), 5000);\r\n            }\r\n        };\r\n        connection?.onclose(start);\r\n        start();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <SignalRContext.Provider value={hubConnection}>\r\n            {children}\r\n        </SignalRContext.Provider>\r\n    )\r\n}","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\Tables\\Logs.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\WebhookItem.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\ApprovalModal.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceHeader.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\Label.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\App.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceHeaderMobile.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\Authentication\\InMemoryJwt.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\LoginModal.js",["177"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsSettings.js",[],["178","179"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\MachineTile\\MachineTileMobile.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\Helpers.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":36,"column":3,"nodeType":"186","endLine":36,"endColumn":12,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":46,"column":40,"nodeType":"190","messageId":"191","endLine":46,"endColumn":42},{"ruleId":"192","severity":1,"message":"193","line":57,"column":33,"nodeType":"194","messageId":"195","endLine":57,"endColumn":35},{"ruleId":"184","severity":1,"message":"196","line":86,"column":8,"nodeType":"197","endLine":86,"endColumn":10,"suggestions":"198"},{"ruleId":"184","severity":1,"message":"199","line":117,"column":8,"nodeType":"197","endLine":117,"endColumn":33,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":15,"column":13,"nodeType":"203","messageId":"204","endLine":22,"endColumn":14},{"ruleId":"184","severity":1,"message":"205","line":29,"column":14,"nodeType":"197","endLine":29,"endColumn":16,"suggestions":"206"},{"ruleId":"201","severity":1,"message":"202","line":16,"column":9,"nodeType":"203","messageId":"204","endLine":23,"endColumn":10},{"ruleId":"184","severity":1,"message":"185","line":70,"column":3,"nodeType":"186","endLine":70,"endColumn":12,"suggestions":"207"},{"ruleId":"184","severity":1,"message":"185","line":34,"column":3,"nodeType":"186","endLine":34,"endColumn":12,"suggestions":"208"},{"ruleId":"184","severity":1,"message":"209","line":89,"column":4,"nodeType":"197","endLine":89,"endColumn":14,"suggestions":"210"},{"ruleId":"184","severity":1,"message":"211","line":93,"column":4,"nodeType":"197","endLine":93,"endColumn":30,"suggestions":"212"},{"ruleId":"184","severity":1,"message":"213","line":20,"column":6,"nodeType":"197","endLine":20,"endColumn":13,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":59,"column":9,"nodeType":"217","endLine":59,"endColumn":44},{"ruleId":"180","replacedBy":"218"},{"ruleId":"182","replacedBy":"219"},{"ruleId":"180","replacedBy":"220"},{"ruleId":"182","replacedBy":"221"},{"ruleId":"201","severity":1,"message":"202","line":14,"column":9,"nodeType":"203","messageId":"204","endLine":21,"endColumn":10},{"ruleId":"180","replacedBy":"222"},{"ruleId":"182","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":6,"column":12,"nodeType":"186","messageId":"226","endLine":6,"endColumn":22},{"ruleId":"184","severity":1,"message":"227","line":7,"column":5,"nodeType":"186","endLine":7,"endColumn":14,"suggestions":"228"},{"ruleId":"224","severity":1,"message":"229","line":11,"column":11,"nodeType":"186","messageId":"226","endLine":11,"endColumn":20},{"ruleId":"215","severity":1,"message":"216","line":25,"column":21,"nodeType":"217","endLine":25,"endColumn":53},{"ruleId":"224","severity":1,"message":"230","line":48,"column":15,"nodeType":"186","messageId":"226","endLine":48,"endColumn":33},{"ruleId":"215","severity":1,"message":"216","line":15,"column":21,"nodeType":"217","endLine":15,"endColumn":63},{"ruleId":"180","replacedBy":"231"},{"ruleId":"182","replacedBy":"232"},{"ruleId":"224","severity":1,"message":"233","line":2,"column":42,"nodeType":"186","messageId":"226","endLine":2,"endColumn":60},{"ruleId":"234","severity":1,"message":"235","line":10,"column":1,"nodeType":"236","endLine":40,"endColumn":2},{"ruleId":"215","severity":1,"message":"216","line":31,"column":25,"nodeType":"217","endLine":31,"endColumn":95},{"ruleId":"180","replacedBy":"237"},{"ruleId":"182","replacedBy":"238"},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLoginStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["241"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'machineName' and 'serviceName'. Either include them or remove the dependency array.","ArrayExpression",["242"],"React Hook useEffect has a missing dependency: 'serviceStatus'. Either include it or remove the dependency array.",["243"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'props.agent' and 'props.serviceName'. Either include them or remove the dependency array.",["244"],["245"],["246"],"React Hook useEffect has a missing dependency: 'machineName'. Either include it or remove the dependency array.",["247"],"React Hook useEffect has a missing dependency: 'favouriteServices'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisplayedServices' needs the current value of 'favouriteServices'.",["248"],"React Hook useEffect has a missing dependency: 'machineTileState.show'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMachineTileState' needs the current value of 'machineTileState.show'.",["249"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["239"],["240"],["239"],["240"],["239"],["240"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","unusedVar","React Hook useEffect contains a call to 'setIsLoggedIn'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["250"],"'testClick' is assigned a value but never used.","'deletedCreatedItem' is assigned a value but never used.",["239"],["240"],"'HubConnectionState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["239"],["240"],"no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"251","fix":"259"},{"desc":"251","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"251","fix":"267"},"Add dependencies array: []",{"range":"268","text":"269"},"Update the dependencies array to be: [machineName, serviceName]",{"range":"270","text":"271"},"Update the dependencies array to be: [connection, machineName, serviceStatus]",{"range":"272","text":"273"},"Update the dependencies array to be: [props.agent, props.serviceName]",{"range":"274","text":"275"},{"range":"276","text":"269"},{"range":"277","text":"269"},"Update the dependencies array to be: [machineName, services]",{"range":"278","text":"279"},"Update the dependencies array to be: [favouriteServices, services, showFavourites]",{"range":"280","text":"281"},"Update the dependencies array to be: [machineTileState.show, props]",{"range":"282","text":"283"},{"range":"284","text":"269"},[1749,1749],", []",[3801,3803],"[machineName, serviceName]",[4934,4959],"[connection, machineName, serviceStatus]",[1174,1176],"[props.agent, props.serviceName]",[2373,2373],[1599,1599],[3165,3175],"[machineName, services]",[3294,3320],"[favouriteServices, services, showFavourites]",[759,766],"[machineTileState.show, props]",[313,313]]