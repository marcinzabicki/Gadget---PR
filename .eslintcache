[{"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsChart.js":"1","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\Main.js":"2","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ServiceBasicInfo.js":"3","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ManageServiceTile.js":"4","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js":"5","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js":"6","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js":"7","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js":"8","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\MachineTile\\MachineTile.js":"9","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\Tables\\DashboardTable.js":"10","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\Chart.js":"11","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\MachineBar.js":"12","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceMobile.js":"13"},{"size":1276,"mtime":1614609870259,"results":"14","hashOfConfig":"15"},{"size":4642,"mtime":1614635125298,"results":"16","hashOfConfig":"15"},{"size":888,"mtime":1614610475170,"results":"17","hashOfConfig":"15"},{"size":817,"mtime":1614611415071,"results":"18","hashOfConfig":"15"},{"size":4613,"mtime":1614611516906,"results":"19","hashOfConfig":"15"},{"size":4176,"mtime":1614614461556,"results":"20","hashOfConfig":"15"},{"size":3577,"mtime":1614339473984,"results":"21","hashOfConfig":"15"},{"size":6621,"mtime":1614766730688,"results":"22","hashOfConfig":"15"},{"size":2002,"mtime":1614766812452,"results":"23","hashOfConfig":"15"},{"size":2055,"mtime":1614766303219,"results":"24","hashOfConfig":"15"},{"size":2204,"mtime":1614766131179,"results":"25","hashOfConfig":"15"},{"size":982,"mtime":1614766852756,"results":"26","hashOfConfig":"15"},{"size":3822,"mtime":1614768330859,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oxmjk5",{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsChart.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\Main.js",["56","57","58","59"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ServiceBasicInfo.js",["60","61","62"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ManageServiceTile.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js",["63"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js",["64"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport MachineTile from \"../Dashboards/MachineDetails/MachineTile/MachineTile\";\r\nimport MachineTileMobile from \"../Dashboards/MachineDetails/MachineTile/MachineTileMobile\";\r\nimport \"../Dashboards/MachineDetails/MachineDetails.css\";\r\nimport Logs from \"../Dashboards/Logs/Logs\";\r\nimport { API } from \"../../utils/API\";\r\nimport { SignalRContext } from \"../../utils/signalr-context\";\r\nimport { useWindowSize } from \"../../Hooks\";\r\nimport Modal from 'react-modal';\r\nimport LoginModal from '../LoginModal';\r\nimport ResponseParser from '../../utils/ResponseParser'\r\n\r\nconst Home = () => {\r\n  const [machineList, setMachineList] = useState({});\r\n  const connection = useContext(SignalRContext);\r\n  const windowSize = useWindowSize();\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n\r\n  Modal.defaultStyles.overlay.backgroundColor = '#2B3139';\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const showModalHandler = () => {\r\n    let isShowing = showModal;\r\n    setShowModal(!isShowing);\r\n  };\r\n\r\n  function calculateMachineStatus(machine) {\r\n    if (\r\n      machine.cpu > 0.7 ||\r\n      machine.ram > 0.75 ||\r\n      machine.discPercentage > 0.95\r\n    )\r\n      return \"#E13849\";\r\n    if (machine.cpu > 0.6 || machine.ram > 0.6 || machine.discPercentage > 0.7)\r\n      return \"#F0AD4E\";\r\n    if (machine.cpu > 0 || machine.ram > 0 || machine.discPercentage > 0)\r\n      return \"#38E18D\";\r\n    return \"#4B4E75\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    let receivedInitialAPIdata = false;\r\n    if (connection !== null) {\r\n      const init = async () => {\r\n        const response = await API.fetchMachineList();\r\n        let machines = {};\r\n        response.data.map((machine) => {\r\n          return (machines[machine.name] = machine);\r\n        });\r\n        setMachineList(machines);\r\n        receivedInitialAPIdata = true;\r\n      };\r\n      connection.on(\"MachineHealthReceived\", (response) => {\r\n        if (receivedInitialAPIdata)\r\n          setMachineList((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              [response.agent]: ResponseParser.MachineHealtStatusReceived(response),\r\n            };\r\n          });\r\n      });\r\n      init();\r\n    }\r\n\r\n    return () => {\r\n      connection?.off(\"MachineHealthReceived\");\r\n    };\r\n  }, [connection]);\r\n\r\n  const getMachines = () => {\r\n    if (windowSize <= 768) {\r\n      return Object.keys(machineList).map((m, i) => {\r\n        return (\r\n          <MachineTileMobile\r\n            machine={machineList[m].name}\r\n            key={i}\r\n            order={i + 1}\r\n            color={calculateMachineStatus(machineList[m])}\r\n            machineAddress={machineList[m].address}\r\n          ></MachineTileMobile>\r\n        );\r\n      });\r\n    }\r\n    return Object.keys(machineList).map((m, i) => {\r\n      return (\r\n        <MachineTile\r\n          machine={machineList[m].name}\r\n          cpu={machineList[m].cpu}\r\n          ram={machineList[m].ram}\r\n          disc={machineList[m].disc}\r\n          services={machineList[m].services}\r\n          key={i}\r\n          machineAddress={machineList[m].address}\r\n        ></MachineTile>\r\n      );\r\n    });\r\n  };\r\n  API.test().then((response) => {\r\n    if (response?.status == \"200\") {\r\n      setLoginStatus(true)\r\n    }\r\n  })\r\n  if (!loginStatus) {\r\n    return <LoginModal decline={showModalHandler}></LoginModal>\r\n  }\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"machine-tiles-container\">{getMachines()}</div>\r\n      <Logs></Logs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",["65","66"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js",["67","68"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\MachineTile\\MachineTile.js",["69","70"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\Tables\\DashboardTable.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\Chart.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Common\\MetricsComponents\\MachineBar.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceMobile.js",["71"],{"ruleId":"72","severity":1,"message":"73","line":11,"column":8,"nodeType":"74","messageId":"75","endLine":11,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":60,"column":40,"nodeType":"78","messageId":"79","endLine":60,"endColumn":42},{"ruleId":"80","severity":1,"message":"81","line":71,"column":33,"nodeType":"82","messageId":"83","endLine":71,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":84,"column":8,"nodeType":"86","endLine":84,"endColumn":10,"suggestions":"87"},{"ruleId":"72","severity":1,"message":"88","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"89","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"90","line":1,"column":38,"nodeType":"74","messageId":"75","endLine":1,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":16,"column":9,"nodeType":"93","messageId":"94","endLine":23,"endColumn":10},{"ruleId":"80","severity":1,"message":"81","line":99,"column":26,"nodeType":"82","messageId":"83","endLine":99,"endColumn":28},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"72","severity":1,"message":"99","line":23,"column":27,"nodeType":"74","messageId":"75","endLine":23,"endColumn":45},{"ruleId":"72","severity":1,"message":"100","line":26,"column":23,"nodeType":"74","messageId":"75","endLine":26,"endColumn":37},{"ruleId":"84","severity":1,"message":"101","line":20,"column":6,"nodeType":"86","endLine":20,"endColumn":13,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":59,"column":9,"nodeType":"105","endLine":59,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":14,"column":9,"nodeType":"93","messageId":"94","endLine":21,"endColumn":10},"no-unused-vars","'ManageServiceTile' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'machineName' and 'serviceName'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'setConnectionState' is assigned a value but never used.","'setLoginStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'machineTileState.show'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMachineTileState' needs the current value of 'machineTileState.show'.",["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"110","fix":"111"},"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [machineName, serviceName]",{"range":"114","text":"115"},"Update the dependencies array to be: [machineTileState.show, props]",{"range":"116","text":"117"},[3320,3322],"[machineName, serviceName]",[759,766],"[machineTileState.show, props]"]