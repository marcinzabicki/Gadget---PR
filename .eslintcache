[{"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\index.js":"1","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js":"2","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\LoginModal.js":"3","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js":"4","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\signalr-context.js":"5","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\Authentication\\InMemoryJwt.js":"6","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Header.js":"7","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\App.js":"8","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\reportWebVitals.js":"9","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\config.js":"10","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js":"11","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ServiceEventsTable.js":"12","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsChart.js":"13","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ServiceBasicInfo.js":"14","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\Main.js":"15","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\Label.js":"16","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Logs\\Logs.js":"17","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineBar\\MachineBar.js":"18","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\Helpers.js":"19","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineTile\\MachineTile.js":"20","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsSettings.js":"21","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js":"22","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\RestartModal.js":"23"},{"size":684,"mtime":1607351855515,"results":"24","hashOfConfig":"25"},{"size":7040,"mtime":1613649499053,"results":"26","hashOfConfig":"25"},{"size":1830,"mtime":1613642004300,"results":"27","hashOfConfig":"25"},{"size":4497,"mtime":1613648720368,"results":"28","hashOfConfig":"25"},{"size":1098,"mtime":1613471733608,"results":"29","hashOfConfig":"25"},{"size":411,"mtime":1611922688373,"results":"30","hashOfConfig":"25"},{"size":1233,"mtime":1613471779928,"results":"31","hashOfConfig":"25"},{"size":1512,"mtime":1613494298400,"results":"32","hashOfConfig":"25"},{"size":375,"mtime":1607351855515,"results":"33","hashOfConfig":"25"},{"size":389,"mtime":1613648468994,"results":"34","hashOfConfig":"25"},{"size":3871,"mtime":1613589071048,"results":"35","hashOfConfig":"25"},{"size":1970,"mtime":1613471779935,"results":"36","hashOfConfig":"25"},{"size":1198,"mtime":1613569740706,"results":"37","hashOfConfig":"25"},{"size":888,"mtime":1613587081915,"results":"38","hashOfConfig":"25"},{"size":3626,"mtime":1613587624730,"results":"39","hashOfConfig":"25"},{"size":279,"mtime":1610548016310,"results":"40","hashOfConfig":"25"},{"size":2121,"mtime":1613575954722,"results":"41","hashOfConfig":"25"},{"size":986,"mtime":1611839454785,"results":"42","hashOfConfig":"25"},{"size":707,"mtime":1613574836012,"results":"43","hashOfConfig":"25"},{"size":1862,"mtime":1613472039419,"results":"44","hashOfConfig":"25"},{"size":4020,"mtime":1613593307038,"results":"45","hashOfConfig":"25"},{"size":2192,"mtime":1613494065812,"results":"46","hashOfConfig":"25"},{"size":689,"mtime":1613471733589,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"oxmjk5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\index.js",[],["102","103"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js",["104","105","106","107"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\LoginModal.js",["108"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js",["109"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\signalr-context.js",["110","111"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { HubConnectionBuilder, LogLevel, HubConnectionState } from \"@microsoft/signalr\";\r\nimport {SIGNALR_URL} from \"../config\";\r\n\r\n\r\nconst SignalRContext = createContext(null)\r\n\r\nexport { SignalRContext }\r\n\r\nexport default ({ children }) => {\r\n    const [hubConnection, setHubConnection] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        const connection = new HubConnectionBuilder()\r\n            .withUrl(SIGNALR_URL)\r\n            .configureLogging(LogLevel.Critical)\r\n            .withAutomaticReconnect()\r\n            .build()\r\n\r\n        async function start() {\r\n            try {\r\n                await connection.start();\r\n                setHubConnection(connection)\r\n            } catch (err) {\r\n                console.log(err);\r\n                setTimeout(() => start(), 5000);\r\n            }\r\n        };\r\n        connection?.onclose(start);\r\n        start();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <SignalRContext.Provider value={hubConnection}>\r\n            {children}\r\n        </SignalRContext.Provider>\r\n    )\r\n}","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\Authentication\\InMemoryJwt.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Header.js",["112"],"import React, { useState } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport LoginModal from './LoginModal'\r\nimport {API} from '../utils/API'\r\n\r\nconst Header = () => {\r\n    Modal.defaultStyles.overlay.backgroundColor = '#2B3139';\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const showModalHandler = ()=>{\r\n        let isShowing = showModal;\r\n        setShowModal(!isShowing);\r\n      };\r\n\r\n    const testClick = ()=>{\r\n        API.test().then((response)=>{\r\n            console.log(response);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"logo\">\r\n                <img src={'/assets/logo.png'} />\r\n                <h1>Gadget - PR</h1>\r\n            </div>\r\n            <div className=\"log-button\">\r\n                <p onClick={testClick}>Test</p>\r\n            </div>\r\n            <div className=\"log-button\">\r\n                <p onClick={showModalHandler}>Log in</p>\r\n            </div>\r\n            <Modal\r\n            className=\"agent-modal\"\r\n             isOpen={showModal}\r\n             ariaHideApp={false}\r\n            >\r\n                <LoginModal decline={showModalHandler}></LoginModal>\r\n            </Modal>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n",["113","114"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\App.js",["115"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\reportWebVitals.js",[],["116","117"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\config.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js",["118"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ServiceEventsTable.js",["119","120","121"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsChart.js",["122","123","124","125"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\ServiceBasicInfo.js",["126","127","128"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\Main.js",["129","130","131","132","133","134"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { SignalRContext } from \"../../utils/signalr-context\";\r\nimport { useWindowSize } from \"../../Hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MachineBar from \"../Dashboards/MachineDetails/MachineBar/MachineBar\"\r\nimport NotificationCharts from \"./components/NotificationsChart\";\r\nimport ServiceEventsTable from \"./components/ServiceEventsTable\";\r\nimport ServiceBasicInfo from \"./components/ServiceBasicInfo\"\r\nimport NotificationSettings from \"./components/NotificationsSettings\"\r\nimport './components/ServiceDetails.css';\r\nimport { API } from \"../../utils/API\";\r\nimport Helpers from \"../../utils/Helpers\"\r\n\r\nconst ServiceDetails = ()=>{\r\n\r\n  const connection = useContext(SignalRContext);\r\n  const { machineName, serviceName } = useParams();\r\n  const [machineState, setMachineState] = useState({});\r\n  const [machineAddress, setMachineAddress] = useState(\"\");\r\n  const [serviceEvents, setServiceEvents] = useState({});\r\n  const [chartData, setChartDat] = useState([]);\r\n\r\n  \r\n  \r\n  const service = {\r\n    serviceName:serviceName,\r\n    machineName:machineName, \r\n    LogonAs:\"Lucjano\", \r\n    description: \"Usługa do karmienia piesełów\", \r\n    status: \"Running\"};\r\n\r\n\r\n    useEffect(() => {\r\n      const init = async () => {\r\n        if (connection !== null) {\r\n          await Promise.all([\r\n            API.fetchServiceEvents(machineName, serviceName).then((response) => {\r\n              const cd =[] \r\n              response.data.map((e, i)=>{\r\n                let val = 0;\r\n                e.status.toLowerCase(e.status) === 'running' ? val = 1 : val = 0.3\r\n                cd.push({time:Helpers.formatDate(e.createdAt), value:val})\r\n              })\r\n              setChartDat(cd);\r\n            }),\r\n            API.fetchMachineList().then((response) => {\r\n              let ipAddress = response.data.filter(\r\n                (ms) => ms.name == machineName\r\n              )[0];\r\n              setMachineAddress(ipAddress.address);\r\n            }),\r\n          ]);\r\n          connection.on(\"MachineHealthReceived\", (response) => {\r\n            if (response.agent === machineName) {\r\n              let updated = {};\r\n              updated.cpu = response.cpuPercentUsage;\r\n              updated.ram = Math.floor(\r\n                100 * (1 - response.memoryFree / response.memoryTotal)\r\n              );\r\n              updated.disc = `${Math.floor(response.discOccupied)}/${Math.floor(\r\n                response.discTotal\r\n              )}`;\r\n              updated.services = `${response.servicesRunning}/${response.servicesCount}`;\r\n              setMachineState(updated);\r\n            }\r\n          });\r\n        }\r\n      };\r\n    \r\n      init();\r\n      return () => {\r\n        connection?.off(\"MachineHealthReceived\");\r\n        connection?.off(\"ServiceStatusChanged\");\r\n      };\r\n    }, [connection]);\r\n  \r\nreturn (\r\n    <div>\r\n       <MachineBar\r\n          machine={machineName}\r\n          address={machineAddress}\r\n          cpu={machineState.cpu}\r\n          ram={machineState.ram}\r\n          disc={machineState.disc}\r\n          services={machineState.services}>\r\n</MachineBar>\r\n\r\n<div className=\"label-settings-container\">\r\n            <div className=\"label-chart-container\">\r\n                <ServiceBasicInfo serviceInfo={service}></ServiceBasicInfo>\r\n                <NotificationCharts data={chartData}></NotificationCharts>\r\n            </div>\r\n              <NotificationSettings></NotificationSettings>\r\n</div> \r\n          \r\n          <ServiceEventsTable></ServiceEventsTable>\r\n</div>    \r\n  )\r\n}\r\n\r\nexport default ServiceDetails;","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\Label.js",[],["135","136"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Logs\\Logs.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineBar\\MachineBar.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\Helpers.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineTile\\MachineTile.js",["137","138"],"import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"../Chart\";\r\nimport MetricTile from \"../MetricTile\";\r\nimport Label from \"../Label\";\r\nimport \"../MachineDetails.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport deadIcon from \"../images/agent_is_dead.png\";\r\n\r\nconst MachineTile = (props) => {\r\n  const [machineTileState, setMachineTileState] = useState({\r\n    metrics: { RAM: props.ram || 0, CPU: props.cpu || 0 },\r\n    show: \"CPU\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMachineTileState({\r\n      metrics: { RAM: props.ram, CPU: props.cpu },\r\n      show: machineTileState.show,\r\n    });\r\n  }, [props]);\r\n\r\n  const changeMetricData = (event) => {\r\n    setMachineTileState({\r\n      metrics: { RAM: props.ram, CPU: props.cpu },\r\n      show: event.target.value,\r\n    });\r\n  };\r\n\r\n  if (props.cpu >= 0) {\r\n    return (\r\n      <div className=\"machine-tile\">\r\n        <Link to={`/${props.machine}`}>\r\n          <Label\r\n            machineName={props.machine}\r\n            machineAddress={props.machineAddress}\r\n          ></Label>\r\n        </Link>\r\n        <div className=\"metric-tile-container\">\r\n          <MetricTile values={props.services} type=\"service\">\r\n            Services\r\n          </MetricTile>\r\n          <MetricTile values={props.disc} type=\"disc\">\r\n            Disk space\r\n          </MetricTile>\r\n        </div>\r\n        <Chart changed={(event) => changeMetricData(event)} selectable={true}>\r\n          {parseInt(machineTileState.metrics[machineTileState.show])}\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"machine-tile\">\r\n      <Label\r\n        machineName={props.machine}\r\n        machineAddress={props.machineAddress}\r\n      ></Label>\r\n      <div className=\"dead-machine-tile\">\r\n        <img src={deadIcon} height={150} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MachineTile;\r\n","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\ServiceDetails\\components\\NotificationsSettings.js",["139","140","141","142","143"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\RestartModal.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":22,"column":27,"nodeType":"150","messageId":"151","endLine":22,"endColumn":45},{"ruleId":"152","severity":1,"message":"153","line":38,"column":31,"nodeType":"154","messageId":"155","endLine":38,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":76,"column":6,"nodeType":"158","endLine":76,"endColumn":18,"suggestions":"159"},{"ruleId":"152","severity":1,"message":"153","line":114,"column":26,"nodeType":"154","messageId":"155","endLine":114,"endColumn":28},{"ruleId":"160","severity":1,"message":"161","line":32,"column":25,"nodeType":"162","endLine":32,"endColumn":95},{"ruleId":"163","severity":1,"message":"164","line":155,"column":17,"nodeType":"165","messageId":"166","endLine":157,"endColumn":6},{"ruleId":"148","severity":1,"message":"167","line":2,"column":42,"nodeType":"150","messageId":"151","endLine":2,"endColumn":60},{"ruleId":"168","severity":1,"message":"169","line":10,"column":1,"nodeType":"170","endLine":40,"endColumn":2},{"ruleId":"160","severity":1,"message":"161","line":24,"column":17,"nodeType":"162","endLine":24,"endColumn":49},{"ruleId":"144","replacedBy":"171"},{"ruleId":"146","replacedBy":"172"},{"ruleId":null,"fatal":true,"severity":2,"message":"173","line":4,"column":28},{"ruleId":"144","replacedBy":"174"},{"ruleId":"146","replacedBy":"175"},{"ruleId":"152","severity":1,"message":"153","line":106,"column":26,"nodeType":"154","messageId":"155","endLine":106,"endColumn":28},{"ruleId":"148","severity":1,"message":"176","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"177","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"178","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":48},{"ruleId":"148","severity":1,"message":"176","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"177","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"178","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":48},{"ruleId":"148","severity":1,"message":"179","line":2,"column":41,"nodeType":"150","messageId":"151","endLine":2,"endColumn":54},{"ruleId":"148","severity":1,"message":"176","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"177","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"178","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":48},{"ruleId":"148","severity":1,"message":"180","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":23},{"ruleId":"148","severity":1,"message":"181","line":20,"column":10,"nodeType":"150","messageId":"151","endLine":20,"endColumn":23},{"ruleId":"148","severity":1,"message":"182","line":20,"column":25,"nodeType":"150","messageId":"151","endLine":20,"endColumn":41},{"ruleId":"183","severity":1,"message":"184","line":39,"column":39,"nodeType":"185","messageId":"186","endLine":39,"endColumn":41},{"ruleId":"152","severity":1,"message":"153","line":48,"column":33,"nodeType":"154","messageId":"155","endLine":48,"endColumn":35},{"ruleId":"156","severity":1,"message":"187","line":75,"column":8,"nodeType":"158","endLine":75,"endColumn":20,"suggestions":"188"},{"ruleId":"144","replacedBy":"189"},{"ruleId":"146","replacedBy":"190"},{"ruleId":"156","severity":1,"message":"191","line":20,"column":6,"nodeType":"158","endLine":20,"endColumn":13,"suggestions":"192"},{"ruleId":"160","severity":1,"message":"161","line":59,"column":9,"nodeType":"162","endLine":59,"endColumn":44},{"ruleId":"148","severity":1,"message":"177","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"178","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":48},{"ruleId":"152","severity":1,"message":"153","line":29,"column":57,"nodeType":"154","messageId":"155","endLine":29,"endColumn":59},{"ruleId":"152","severity":1,"message":"153","line":38,"column":62,"nodeType":"154","messageId":"155","endLine":38,"endColumn":64},{"ruleId":"152","severity":1,"message":"153","line":39,"column":88,"nodeType":"154","messageId":"155","endLine":39,"endColumn":90},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'setConnectionState' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'machineName' and 'services'. Either include them or remove the dependency array.","ArrayExpression",["195"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","'HubConnectionState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["193"],["194"],"Parsing error: Unexpected token\n\n  2 | import Home from \"./components/Home/Main\";\n  3 | import Dashboards from \"./components/Dashboards/Main\";\n> 4 | import ServiceDetails from `./components/ServiceDetails/Main`;\n    |                            ^\n  5 | import SignalRProvider from \"./utils/signalr-context\";\n  6 | // import Inbox from './components/Inbox/Main';\n  7 | // import Products from './components/Products/Main';",["193"],["194"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'CartesianGrid' is defined but never used.","'useWindowSize' is defined but never used.","'serviceEvents' is assigned a value but never used.","'setServiceEvents' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'machineName' and 'serviceName'. Either include them or remove the dependency array.",["196"],["193"],["194"],"React Hook useEffect has a missing dependency: 'machineTileState.show'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMachineTileState' needs the current value of 'machineTileState.show'.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [connection, machineName, services]",{"range":"204","text":"205"},"Update the dependencies array to be: [connection, machineName, serviceName]",{"range":"206","text":"207"},"Update the dependencies array to be: [machineTileState.show, props]",{"range":"208","text":"209"},[2988,3000],"[connection, machineName, services]",[2870,2882],"[connection, machineName, serviceName]",[619,626],"[machineTileState.show, props]"]